---
  - name: Deploying AWS instance
    hosts: localhost
    connection: local
    gather_facts: no
    vars_files:
    - group_vars/all

    tasks:
    - name: Creating {{target_hostname}} on AWS in the {{region}} region
      amazon.aws.ec2_instance:
        name: "{{ target_hostname}}"
        key_name: "{{key_name}}"
        instance_type: "{{instance_type}}"
        image_id:  "{{image}}"
        security_group: "{{group}}"
        wait: yes
        wait_timeout: 500
        region: "{{region}}"
        vpc_subnet_id:  "{{vpc_subnet_id}}"
        network:
          assign_public_ip: "{{assign_public_ip}}"
        tags:
          AlwaysUp: "{{alwaysup}}"
          Name: "{{target_hostname}}"
          Contact: "{{my_email_address}}"
          DeleteBy: "{{deleteby}}"
        state: running
      register: ec2

    - name: Add delay for Amazon to update public_dns_name
      wait_for:
        timeout: 30

    - name: Add host to in memory inventory
      add_host:
        name: "{{ item.public_dns_name }}"
        ansible_host: "{{ item.public_dns_name }}"
        ansible_user: ec2-user
        groups: newhosts
      with_items:
      - "{{ ec2.instances }}"

    - name: Add DNS entry to Route53
      community.aws.route53:
        state: present
        zone: "{{ aws_domain }}"
        record: "{{ target_hostname }}"
        type: A
        ttl: 7200
        value: "{{ item.public_ip_address }}"
      with_items:
      - "{{ ec2.instances }}"

        #  - name: Update static inventory
        #    hosts: "{{ tower_fqdn }}"
        #    tasks:
        #    - name: Add host to in static inventory
        #      become: true
        #      awx.awx.host:
        #        inventory: "Opentlc Hosts" 
        #        name: "{{ target_hostname }}" 
        #        state: present
        #        controller_config_file: "~/.tower_cli.cfg"
        #        variables:
        #          ansible_user: ec2-user
    - name: Waiting for SSH to come up on {{ target_hostname }}
      wait_for:
        host: "{{ item.public_dns_name }}"
        port: 22
        delay: 15
        timeout: 320
        state: started
      with_items: 
      - "{{ ec2.instances }}"

  - name: Configuring hostname for {{ target_hostname }}
    hosts: newhosts
    gather_facts: no
    become: true
    tasks:
    - name: Setting hostname to {{ target_hostname }}
      ansible.builtin.hostname:
        name: "{{ target_hostname }}"
